apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-rb
data:
  gitlab.rb: |
    external_url "https://gitlab"
    letsencrypt['enable'] = false
    nginx['ssl_certificate'] = "/srv/gitlab/cert/server.crt"
    nginx['ssl_certificate_key'] = "/srv/gitlab/cert/server.key"
    grafana['enable'] = false
    mattermost['enable'] = false
    prometheus['enable'] = false
    git_data_dirs({ "default" => { "path" => "/srv/gitlab/data/" } })
    gitlab_rails['rack_attack_git_basic_auth'] = {
      'enabled' => true,
      'maxretry' => 10,
      'findtime' => 60,
      'bantime' => 3600
    }
    gitlab_rails['backup_gitaly_backup_path'] = '/srv/gitlab/backup'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-ssl-script
data:
  ssl.sh: |
    set -x
    export CRTF="/cert"
    export KEY="$CRTF/ca.key"
    export KEYS="$CRTF/server.key"
    export CRT="$CRTF/ca.crt"
    export CRTS="$CRTF/server.crt"
    export CSR="$CRTF/server.csr"

    openssl genrsa -out ca.key 2048
    openssl req -new -x509 -days 365 -key $KEY -subj "/C=CN/ST=GD/L=SZ/O=Acme, Inc./CN=Acme Root CA" -out $CRT

    openssl req -newkey rsa:2048 -nodes -keyout $KEYS -subj "/C=CN/ST=GD/L=SZ/O=Acme, Inc./CN=gitlab" -out $CSR --addext "subjectAltName = DNS:gitlab"

    openssl x509 -req -days 365 -in $CSR -CA $CRT -CAkey $KEY -CAcreateserial -out $CRTS
